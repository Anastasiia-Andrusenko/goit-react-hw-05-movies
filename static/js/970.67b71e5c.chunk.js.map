{"version":3,"file":"static/js/970.67b71e5c.chunk.js","mappings":"yVAEMA,EAAS,mCAEFC,EAAiB,mCAAG,WAAOC,GAAP,uEACf,mDADe,SAGlBC,MAAM,GAAD,OAFF,mDAEE,mBAAsBH,EAAtB,iBAAqCE,IAAQE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAH7C,mFAAH,sDAQjBC,EAAgB,mCAAG,WAAOC,EAAON,GAAd,uEACd,4CADc,SAGjBC,MAAM,GAAD,OAFF,4CAEE,oBAAuBH,EAAvB,iCAAsDQ,EAAtD,iBAAoEN,EAApE,yBAAgGE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHjG,mFAAH,wDAOhBG,EAAe,mCAAG,WAAOC,GAAP,uEACb,sCADa,SAGhBP,MAAM,GAAD,OAFF,uCAEE,OAAcO,EAAd,oBAAiCV,EAAjC,oBAA0DI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAH5D,mFAAH,sDAOfK,EAAe,mCAAG,WAAOD,GAAP,uEACb,sCADa,SAGhBP,MAAM,GAAD,OAFF,uCAEE,OAAcO,EAAd,4BAAyCV,EAAzC,oBAAkEI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHpE,mFAAH,sDAOfM,EAAU,mCAAG,WAAOF,GAAP,uEACR,sCADQ,SAGXP,MAAM,GAAD,OAFF,uCAEE,OAAcO,EAAd,4BAAyCV,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAH1D,mFAAH,sDAMVO,EAAiB,mCAAG,WAAOC,GAAP,uEACf,uCADe,SAIlBX,MAAM,GAAD,OAHF,wCAGE,OAAcW,EAAd,kCAAgDd,EAAhD,oBAAyEI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAJzE,mFAAH,sDAOjBS,EAAgB,mCAAG,WAAOD,GAAP,uEACd,uCADc,SAGjBX,MAAM,GAAD,OAFF,wCAEE,OAAcW,EAAd,oBAAkCd,EAAlC,oBAA2DI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAH5D,mFAAH,qD,qEC7C7B,EAAyB,uB,SCczB,EAXe,SAAC,GAAqB,IAAnBU,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAClBC,EAAS,0CAAsCF,GAIrD,OAAO,8BACO,OAAXA,GAAkB,gBAAKG,UAAWC,EAAYC,IAAKC,EAAOL,IAAKA,KAAc,gBAAKE,UAAWC,EAAYC,IAAKH,EAAWD,IAAKA,KAGlI,C,kFCZD,EAA4B,wBAA5B,EAAuF,mBAAvF,EAAiH,mBAAjH,EAA2I,mBAA3I,EAA0K,wBAA1K,EAA0M,oB,2DCOtMM,EADSC,EAAQ,MACDC,cA2CpB,EAzCa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QAGFoB,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAgBD,GAASN,MAAK,SAAAC,GAE5B,IAAM4B,EAAO5B,EAAS4B,KAAKC,MAAM,EAAG,IAEpCN,EAASK,EACV,IAGDV,EAAOY,SAAS,IAEjB,GAAE,CAACzB,KAIF,gBAAKS,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGO,EAAMS,KAAI,SAAAC,GAAI,OACb,SAAC,KAAD,CAAoBC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAMX,GAAWX,UAAWC,EAAUJ,OAAQqB,EAAKK,aAAzG,UACE,gBAAIH,GAAIF,EAAKE,GAAb,WACE,gBAAKpB,UAAWC,EAAhB,UACE,SAACuB,EAAA,EAAD,CAAQ3B,OAAQqB,EAAKK,kBAEvB,cAAGvB,UAAWC,EAAd,SAAyBiB,EAAKO,iBAC9B,cAAGzB,UAAWC,EAAd,SAA8BiB,EAAKQ,gBAN5BR,EAAKE,GADH,OAatB,C,yGCjDD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOnD,KAAK8C,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["api/getMovies.js","webpack://react-homework-template/./src/components/MovieCards/Poster.module.css?e0aa","components/MovieCards/Poster.jsx","webpack://react-homework-template/./src/components/pages/MovieDetails/Cast/Cast.module.css?855e","components/pages/MovieDetails/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\n\nconst APIkey = 'ed69d95ca692b419d92a1a545c626337';\n\nexport const getTrendingMovies = async (page) => {\n  const baseURL = 'https://api.themoviedb.org/3/trending/movie/day?';\n\n  return await fetch(`${baseURL}api_key=${APIkey}&page=${page}`).then(response => response.json());\n}\n\n\n\nexport const getMoviesByQuery = async (query, page) => {\n  const baseURL = 'https://api.themoviedb.org/3/search/movie'\n\n  return await fetch(`${baseURL}?api_key=${APIkey}&language=en-US&query=${query}&page=${page}&include_adult=false`).then(response => response.json());\n}\n\n\nexport const getMovieDetails = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}\n\n\nexport const getMovieCredits = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}/credits?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}\n\n\nexport const getReviews = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}/reviews?api_key=${APIkey}`).then(response => response.json());\n}\n\nexport const getMoviesByPerson = async (personId) => {\n  const baseURL = 'https://api.themoviedb.org/3/person/'\n\n  // movie_credits?api_key=<<api_key>>&language=en-US\n  return await fetch(`${baseURL}${personId}/movie_credits?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}\n\nexport const getPersonDetails = async (personId) => {\n  const baseURL = 'https://api.themoviedb.org/3/person/'\n\n  return await fetch(`${baseURL}${personId}?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Poster_poster__L2YyV\"};","import PropTypes from \"prop-types\";\nimport frame from '../../../src/frame.jpg';\nimport css from './Poster.module.css';\n\nconst Poster = ({ poster, alt }) => {\n  const posterSrc = `https://image.tmdb.org/t/p/w300/${poster}`\n\n  // console.log(poster);\n\n  return <>\n    {poster === null ? <img className={css.poster} src={frame} alt={alt}></img> : <img className={css.poster} src={posterSrc} alt={alt}></img>}\n  </>\n\n}\n\nexport default Poster;\n\nPoster.propTypes = {\n  poster: PropTypes.string,\n  alt: PropTypes.string,\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__GNcwS\",\"arrow\":\"Cast_arrow__YAaIj\",\"list\":\"Cast_list__drU3z\",\"item\":\"Cast_item__0FgPP\",\"name\":\"Cast_name__gAPbo\",\"character\":\"Cast_character__it1QB\",\"photo\":\"Cast_photo__O+aHC\"};","import css from './Cast.module.css';\nimport Poster from 'components/MovieCards/Poster';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { getMovieCredits } from 'api/getMovies';\n\n\nvar Scroll = require('react-scroll');\nvar scroll = Scroll.animateScroll;\n\nconst Cast = () => {\n  const [items, setItems] = useState([]);\n  // const [personId, setPersonId] = useState();\n\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(response => {\n      // console.log(response.cast);\n      const cast = response.cast.slice(0, 12);\n      // console.log(cast);\n      setItems(cast);\n    })\n\n\n    scroll.scrollTo(200);\n\n  }, [movieId])\n\n  \n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {items.map(item => \n          <Link key={item.id} to={`/person/${item.id}`} state={{from: location}} className={css.item} poster={item.profile_path}>\n            <li id={item.id}>\n              <div className={css.photo}>\n                <Poster poster={item.profile_path} />\n              </div>\n              <p className={css.name}>{item.original_name}</p>\n              <p className={css.character}>{item.character}</p>\n            </li>\n          </Link>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["APIkey","getTrendingMovies","page","fetch","then","response","json","getMoviesByQuery","query","getMovieDetails","movieId","getMovieCredits","getReviews","getMoviesByPerson","personId","getPersonDetails","poster","alt","posterSrc","className","css","src","frame","scroll","require","animateScroll","useState","items","setItems","useParams","location","useLocation","useEffect","cast","slice","scrollTo","map","item","to","id","state","from","profile_path","Poster","original_name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}