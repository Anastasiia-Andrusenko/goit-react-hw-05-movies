{"version":3,"file":"static/js/958.21326d4f.chunk.js","mappings":"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","sources":["api/getMovies.js","webpack://react-homework-template/./src/components/MovieCards/Poster.module.css?e0aa","components/MovieCards/Poster.jsx","webpack://react-homework-template/./src/components/pages/MovieDetails/MovieDetails.module.css?1b37","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\n\nconst APIkey = 'ed69d95ca692b419d92a1a545c626337';\n\nexport const getTrendingMovies = async (page) => {\n  const baseURL = 'https://api.themoviedb.org/3/trending/movie/day?';\n\n  return await fetch(`${baseURL}api_key=${APIkey}&page=${page}`).then(response => response.json());\n}\n\n\n\nexport const getMoviesByQuery = async (query, page) => {\n  const baseURL = 'https://api.themoviedb.org/3/search/movie'\n\n  return await fetch(`${baseURL}?api_key=${APIkey}&language=en-US&query=${query}&page=${page}&include_adult=false`).then(response => response.json());\n}\n\n\nexport const getMovieDetails = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}\n\n\nexport const getMovieCredits = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}/credits?api_key=${APIkey}&language=en-US`).then(response => response.json());\n}\n\n\nexport const getReviews = async (movieId) => {\n  const baseURL = 'https://api.themoviedb.org/3/movie/'\n\n  return await fetch(`${baseURL}${movieId}/reviews?api_key=${APIkey}`).then(response => response.json());\n}","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"Poster_poster__L2YyV\"};","import PropTypes from \"prop-types\";\nimport frame from '../../../src/frame.jpg';\nimport css from './Poster.module.css';\n\nconst Poster = ({ poster, alt }) => {\n  const posterSrc = `https://image.tmdb.org/t/p/w300/${poster}`\n\n  // console.log(poster);\n\n  return <>\n    {poster === null ? <img className={css.poster} src={frame} alt={alt}></img> : <img className={css.poster} src={posterSrc} alt={alt}></img>}\n  </>\n\n}\n\nexport default Poster;\n\nPoster.propTypes = {\n  poster: PropTypes.string,\n  alt: PropTypes.string,\n}","// extracted by mini-css-extract-plugin\nexport default {\"go_back\":\"MovieDetails_go_back__pDf6j\",\"arrow\":\"MovieDetails_arrow__XC76T\",\"movie\":\"MovieDetails_movie__uXENX\",\"name\":\"MovieDetails_name__Gjshm\",\"year\":\"MovieDetails_year__oHNCr\",\"title\":\"MovieDetails_title__OOJAI\",\"info\":\"MovieDetails_info__dEPoh\",\"number\":\"MovieDetails_number__9BaHe\",\"icon\":\"MovieDetails_icon__HEPYf\",\"title_extra\":\"MovieDetails_title_extra__rQAu6\",\"extra_info_menu\":\"MovieDetails_extra_info_menu__fG+DC\",\"link\":\"MovieDetails_link__E3pMX\",\"current\":\"MovieDetails_current__LNt24\",\"detail\":\"MovieDetails_detail__hgqsx\",\"poster\":\"MovieDetails_poster__B12ex\"};","import { Suspense } from \"react\";\nimport { NavLink, useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport css from '../MovieDetails/MovieDetails.module.css';\n\nimport { MdArrowBackIos } from 'react-icons/md';\nimport { FaTheaterMasks } from 'react-icons/fa';\nimport { AiOutlineLike } from 'react-icons/ai';\n\nimport { getMovieDetails } from '../../../api/getMovies';\n\nimport Poster from \"../../MovieCards/Poster\";\n\nvar Scroll = require('react-scroll');\nvar scroll = Scroll.animateScroll;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const [genres, setGenres] = useState('');\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [overview, setOverview] = useState('');\n  const [poster, setPoster] = useState('');\n  const [vote, setVote] = useState(0);\n\n  const location = useLocation();\n  const from = location.state?.from || \"/\";\n  // console.log(location.state.from);\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(response => {\n      // console.log(response);\n      const { original_title, overview, genres, release_date, poster_path, vote_average } = response;\n      setDate(release_date.slice(0, -6));\n      setTitle(original_title);\n      setGenres(genres.map(genre => genre.name).join(', '));\n      setOverview(overview);\n      setPoster(poster_path);\n      setVote(Math.round(vote_average * 10));\n    })\n\n    scroll.scrollToTop();\n\n  }, [movieId])\n  \nconst getClassName = ({ isActive }) => {\n  return isActive ? `${css.link} ${css.current}` : css.link;\n}\n\n  return <div className={css.container}>\n    <div className={css.go_back} onClick={goBack}>\n      <p><MdArrowBackIos className={css.arrow}/>back</p>\n    </div>\n    <div className={css.movie}>\n      <div className={css.poster}>\n        <Poster poster={poster} alt={title} />\n      </div>\n      <div className={css.detail}>\n        <h2 className={css.name}>{title}</h2>\n        <p className={css.year}>{date}</p>\n        <p className={css.info}>User score\n          <AiOutlineLike className={css.icon} />\n          <span className={css.number}>{vote}</span> %</p>\n        <p className={css.title}>Overview</p>\n        <p className={css.info}>{overview}</p>\n        <p className={css.title}>Genres <FaTheaterMasks className={css.icon}/></p>\n        <p className={css.info}>{genres}</p>\n      </div>\n    </div>\n    <div className={css.add_info}>\n      <h3 className={css.title_extra}>additional information</h3>\n      <ul className={css.extra_info_menu}>\n        <li>\n          <NavLink state={{from}} className={getClassName} to={`/movies/${movieId}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink state={{from}} className={getClassName} to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>...loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  </div>\n}\n\nexport default MovieDetails;"],"names":["APIkey","getTrendingMovies","page","fetch","then","response","json","getMoviesByQuery","query","getMovieDetails","movieId","getMovieCredits","getReviews","poster","alt","posterSrc","className","css","src","frame","scroll","require","animateScroll","useParams","navigate","useNavigate","useState","genres","setGenres","title","setTitle","date","setDate","overview","setOverview","setPoster","vote","setVote","from","useLocation","state","useEffect","original_title","release_date","poster_path","vote_average","slice","map","genre","name","join","Math","round","scrollToTop","getClassName","isActive","onClick","Poster","to","Suspense","fallback"],"sourceRoot":""}